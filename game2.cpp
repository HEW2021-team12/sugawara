/*==============================================================================

   ゲーム処理 [game.cpp]
														 Author :
														 Date   :
--------------------------------------------------------------------------------

==============================================================================*/

#include "game.h"
#include "main.h"
#include "input.h"
#include "fade.h"
#include "player.h"
#include "collision.h"
#include "enemy.h"
#include "gas_gauge.h"
#include "map2.h"

/*------------------------------------------------------------------------------
   定数定義
------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
   構造体宣言
------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------
   プロトタイプ宣言
------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------
   グローバル変数の定義
------------------------------------------------------------------------------*/
static int g_BGMNo = 0;


/*------------------------------------------------------------------------------
   初期化関数
------------------------------------------------------------------------------*/
void InitGame2(void)
{
	InitPlayer();
	InitEnemy();
	InitMap2();
	InitGasGauge();
}

/*------------------------------------------------------------------------------
   終了処理をする関数
------------------------------------------------------------------------------*/
void UninitGame2()
{
	//初期化とは逆順に終了処理を行う
	UninitMap2();
	UninitPlayer();
	UninitEnemy();
	UninitGasGauge();
}

/*------------------------------------------------------------------------------
   更新処理をする関数
------------------------------------------------------------------------------*/
void UpdateGame2(void)
{
	UpdateMap2();
	UpdateEnemy();
	UpdatePlayer();
	UpdateGasGauge();
	
	UpdateCollision();

	//スペースキーが押されていて、フェード処理中ではないとき
	if (GetKeyboardTrigger(DIK_RETURN) && GetFadeState() == FADE_NONE) 
	{
		
		//RESULTへ移行する
		//SceneTransition(SCENE_RESULT);
	}
}

/*------------------------------------------------------------------------------
   描画処理をする関数
------------------------------------------------------------------------------*/
void DrawGame2(void)
{
	DrawMap2();
	DrawPlayer();
	DrawEnemy();
	DrawGasGauge();
}

