//=============================================================================
//
// ゲームオーバー画面処理 [game_over.cpp]
// Author : 歐
//
//=============================================================================
#include "game_over.h"
#include "input.h"
#include "texture.h"
#include "sprite.h"
#include "fade.h"
#include "sound.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************


//*****************************************************************************
// グローバル変数
//*****************************************************************************
static int	g_TextureNo = 0;	// テクスチャ情報
static int g_BGMNo = 0;

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT InitGameOver(void)
{
	g_TextureNo = LoadTexture("data/TEXTURE/over.png");
	g_BGMNo = LoadSound("data/BGM/LOSE.wav");

	PlaySound(g_BGMNo, 255);
	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void UninitGameOver(void)
{
	StopSoundAll();
}
//=============================================================================
// 更新処理
//=============================================================================
void UpdateGameOver(void)
{
	if (GetKeyboardTrigger(DIK_RETURN) && GetFadeState() == FADE_NONE)
	{
		SceneTransition(SCENE_TITLE);
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void DrawGameOver(void)
{
	DrawSpriteLeftTop(g_TextureNo, 0.0f, 0.0f, SCREEN_WIDTH, SCREEN_HEIGHT, 0.0f, 0.0f, 1.0f, 1.0f);
}
